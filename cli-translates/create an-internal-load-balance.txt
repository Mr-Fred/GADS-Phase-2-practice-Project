Create an Internal Load Balance

# Setting up my environment 

export PROJECT_ID=qwiklabs-gcp-02-0edcfa778435
export ZONE1=us-central1-a
export ZONE2=us-central1-b

gcloud config set project $PROJECT_ID
gcloud config set compute/region us-central1


Task 1 Configure HTTP and health check firewall rules

# Explore the my-internal-app network

gcloud compute networks subnets list --network my-internal-app

# Create the HTTP firewall rule

gcloud compute firewall-rules create app-allow-http \
--network=my-internal-app \
--direction=INGRESS \
--allow=tcp:80 \
--target-tags=lb-backend

# Create the health check firewall rules

gcloud compute firewall-rules create app-allow-health-check \
--network=default \
--direction=INGRESS \
--allow=tcp \
--target-tags=lb-backend \
--source-ranges=130.211.0.0/22,35.191.0.0/16

Task 2 Configure instance templates and create instance groups

# Configure the instance templates

gcloud compute instance-templates create instance-template-1 \
--metadata=startup-script-url=gs://cloud-training/gcpnet/ilb/startup.sh \
--network=my-internal-app \
--subnet=subnet-a \
--tags=lb-backend

gcloud compute instance-templates create instance-template-2 \
--metadata=startup-script-url=gs://cloud-training/gcpnet/ilb/startup.sh \
--network=my-internal-app \
--subnet=subnet-b \
--tags=lb-backend

# Create the managed instance groups

gcloud compute instance-groups managed create instance-group-1 \
--template=instance-template-1 \
--zone=$ZONE1 \
--size=1

gcloud compute instance-groups managed set-autoscaling instance-group-1 \
--scale-based-on-cpu \
--target-cpu-utilization=0.8 \
--min-num-replicas=1 \
--max-num-replicas=5 \
--cool-down-period=45 \
--zone=$ZONE1

gcloud compute instance-groups managed set-named-ports instance-group-1 \
--named-ports=http:80 \
--zone=$ZONE1

gcloud compute instance-groups managed create instance-group-2 \
--template=instance-template-2 \
--zone=$ZONE2 \
--size=1

gcloud compute instance-groups managed set-autoscaling instance-group-2 \
--scale-based-on-cpu \
--target-cpu-utilization=0.8 \
--min-num-replicas=1 \
--max-num-replicas=5 \
--cool-down-period=45 \
--zone=$ZONE2

gcloud compute instance-groups managed set-named-ports instance-group-2 \
--named-ports=http:80 \
--zone=$ZONE2

# Verify the backends

gcloud compute instances create utility-vm \
--zone=us-central1-f \
--machine-type=f1-micro \
--network=my-internal-app \
--subnet=subnet-a \
--private-network-ip=10.10.20.50

gcloud compute ssh utility-vm --zone=us-central1-f

curl 10.10.20.2
curl 10.10.30.2

exit ssh

Task 3 Configure the Internal Load Balancer

export REGION=us-central1

# creating a health check

gcloud compute health-checks create tcp my-ilb-health-check \
--port=80

# Configuring the backend

gcloud compute backend-services create my-ilb \
--load-balancing-scheme=internal \
--network=my-internal-app \
--health-checks=my-ilb-health-check \
--protocol=TCP \
--region=$REGION

gcloud compute backend-services add-backend my-ilb \
--instance-group=instance-group-1 \
--instance-group-zone=$ZONE1 \
--region=$REGION

gcloud compute backend-services add-backend my-ilb \
--instance-group=instance-group-2 \
--instance-group-zone=$ZONE2 \
--region=$REGION

gcloud compute forwarding-rules create my-ilb-frontend \
--backend-service=my-ilb \
--backend-service-region=$REGION \
--load-balancing-scheme=internal \
--network=my-internal-app \
--subnet=subnet-b \
--address=10.10.30.5 \
--ip-protocol=tcp \
--ports=80 \
--region=$REGION

Task 4 Test the Internal Load Balancer

# ssh into utility vm

gcloud compute ssh utility-vm --zone us-central1-f 

curl 10.10.30.5

