Challenge Lab: Ensure Access & Identity in Google Cloud

In this Lab we Create a custom security role.
Create a service account.
Bind IAM security roles to a service account.
Create a private Kubernetes Engine cluster in a custom subnet.
Deploy an application to a private Kubernetes Engine cluster

# Setting up my environement

export PROJECT_ID=qwiklabs-gcp-02-2ba3afc17579
gcloud config set project $PROJECT_ID
gcloud config set compute/region us-east1
gcloud config set compute/zone us-east1-b

gcloud compute networks list
gcloud compute networks subnets list --network=orca-build-vpc


Task 1: Create a custom security role.

gcloud iam roles create orca_storage_update --project=$PROJECT_ID \
--stage=GA \
--title="orca storage update" \
--permissions=storage.buckets.get,storage.objects.get,storage.objects.list,storage.objects.update,storage.objects.create

export CUSTOM_ROLE=projects/qwiklabs-gcp-02-2ba3afc17579/roles/orca_storage_update

Task 2: Create a service account.

gcloud iam service-accounts create orca-private-cluster-sa --display-name="Orca private cluster sa"

export PRIVATE_CLUSTER_SA=orca-private-cluster-sa@qwiklabs-gcp-02-2ba3afc17579.iam.gserviceaccount.com

Task 3: Bind a custom security role to a service account.

gcloud projects get-iam-policy $PROJECT_ID --format yaml > policy.yaml

# we then modify the policy.yaml file to include the roles and bind the project with the new role

gcloud projects set-iam-policy $PROJECT_ID policy.yaml

Task 4: Create and configure a new Kubernetes Engine private cluster

gcloud container clusters create orca-test-cluster \
--enable-private-nodes \
--enable-ip-alias \
--enable-private-endpoint \
--network=orca-build-vpc \
--subnetwork=orca-build-subnet \
--master-ipv4-cidr=172.16.0.16/28 \
--zone=us-east1-b \
--service-account=$PRIVATE_CLUSTER_SA

gcloud container clusters update orca-test-cluster \
--enable-master-authorized-networks \
--master-authorized-networks=192.168.10.2/32

Task 5: Deploy an application to a private Kubernetes Engine cluster.

gcloud compute ssh orca-jumphost --zone=us-east1-b 

gcloud container clusters get-credentials orca-test-cluster --internal-ip --zone=us-east1-b

# creating a deployment from orca-jumphost to test out vm is authorised with our cluster

kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:1.0